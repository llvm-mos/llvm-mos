; RUN: llvm-mc -assemble --print-imm-hex --show-encoding -triple mos --mcpu=mos45gs02 < %s | FileCheck %s
	orq $eaea                   ; CHECK: encoding: [0x42,0x42,0x0d,0xea,0xea]
	orq $ea                     ; CHECK: encoding: [0x42,0x42,0x05,0xea]
	aslq $eaea                  ; CHECK: encoding: [0x42,0x42,0x0e,0xea,0xea]
	aslq $ea                    ; CHECK: encoding: [0x42,0x42,0x06,0xea]
	bitq $eaea                  ; CHECK: encoding: [0x42,0x42,0x2c,0xea,0xea]
	bitq $ea                    ; CHECK: encoding: [0x42,0x42,0x24,0xea]
	andq $eaea                  ; CHECK: encoding: [0x42,0x42,0x2d,0xea,0xea]
	andq $ea                    ; CHECK: encoding: [0x42,0x42,0x25,0xea]
	rolq $eaea                  ; CHECK: encoding: [0x42,0x42,0x2e,0xea,0xea]
	rolq $ea                    ; CHECK: encoding: [0x42,0x42,0x26,0xea]
	eorq $eaea                  ; CHECK: encoding: [0x42,0x42,0x4d,0xea,0xea]
	eorq $ea                    ; CHECK: encoding: [0x42,0x42,0x45,0xea]
	lsrq $eaea                  ; CHECK: encoding: [0x42,0x42,0x4e,0xea,0xea]
	lsrq $ea                    ; CHECK: encoding: [0x42,0x42,0x46,0xea]
	adcq $eaea                  ; CHECK: encoding: [0x42,0x42,0x6d,0xea,0xea]
	adcq $ea                    ; CHECK: encoding: [0x42,0x42,0x65,0xea]
	rorq $eaea                  ; CHECK: encoding: [0x42,0x42,0x6e,0xea,0xea]
	rorq $ea                    ; CHECK: encoding: [0x42,0x42,0x66,0xea]
	stq	$eaea                   ; CHECK: encoding: [0x42,0x42,0x8d,0xea,0xea]
	stq	$ea                     ; CHECK: encoding: [0x42,0x42,0x85,0xea]
	ldq	$eaea                   ; CHECK: encoding: [0x42,0x42,0xad,0xea,0xea]
	ldq	$ea                     ; CHECK: encoding: [0x42,0x42,0xa5,0xea]
	cpq	$eaea                   ; CHECK: encoding: [0x42,0x42,0xcd,0xea,0xea]
	cpq	$ea                     ; CHECK: encoding: [0x42,0x42,0xc5,0xea]
	deq	$eaea                   ; CHECK: encoding: [0x42,0x42,0xce,0xea,0xea]
	deq	$ea                     ; CHECK: encoding: [0x42,0x42,0xc6,0xea]
 	sbcq $eaea					; CHECK: encoding: [0x42,0x42,0xed,0xea,0xea]
 	sbcq $ea					; CHECK: encoding: [0x42,0x42,0xe5,0xea]
	inq	$eaea                   ; CHECK: encoding: [0x42,0x42,0xee,0xea,0xea]
	inq	$ea                     ; CHECK: encoding: [0x42,0x42,0xe6,0xea]

	; Indirect quad instructions (32-bit pointer, NEG NEG NOP prefix)
	orq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0x12,0xab]
	andq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0x32,0xab]
	eorq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0x52,0xab]
	adcq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0x72,0xab]
	stq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0x92,0xab]
	ldq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0xb2,0xab]
	cpq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0xd2,0xab]
	sbcq [$ab]					; CHECK: encoding: [0x42,0x42,0xea,0xf2,0xab]

	; Indirect quad instructions (32-bit pointer, NEG NEG prefix)
	orq ($ab)					; CHECK: encoding: [0x42,0x42,0x12,0xab]
	andq ($ab)					; CHECK: encoding: [0x42,0x42,0x32,0xab]
	eorq ($ab)					; CHECK: encoding: [0x42,0x42,0x52,0xab]
	adcq ($ab)					; CHECK: encoding: [0x42,0x42,0x72,0xab]
	stq ($ab)					; CHECK: encoding: [0x42,0x42,0x92,0xab]
	ldq ($ab)					; CHECK: encoding: [0x42,0x42,0xb2,0xab]
	cpq ($ab)					; CHECK: encoding: [0x42,0x42,0xd2,0xab]
	sbcq ($ab)					; CHECK: encoding: [0x42,0x42,0xf2,0xab]

	; Flat memory access where operand is interpreted as a 32-bit address
	ora	[$ab], z				; CHECK: encoding: [0xea,0x12,0xab]
	and	[$ab], z				; CHECK: encoding: [0xea,0x32,0xab]
	eor	[$ab], z				; CHECK: encoding: [0xea,0x52,0xab]
	adc	[$ab], z				; CHECK: encoding: [0xea,0x72,0xab]
	sta	[$ab], z				; CHECK: encoding: [0xea,0x92,0xab]
	lda	[$ab], z				; CHECK: encoding: [0xea,0xb2,0xab]
	cmp	[$ab], z				; CHECK: encoding: [0xea,0xd2,0xab]
	sbc	[$ab], z				; CHECK: encoding: [0xea,0xf2,0xab]

	; Base page quad, X indexed (NEG NEG prefix)
	aslq $ab, x					; CHECK: encoding: [0x42,0x42,0x16,0xab]
	rolq $ab, x					; CHECK: encoding: [0x42,0x42,0x36,0xab]
	asrq $ab, x					; CHECK: encoding: [0x42,0x42,0x54,0xab]
	lsrq $ab, x					; CHECK: encoding: [0x42,0x42,0x56,0xab]
	rorq $ab, x					; CHECK: encoding: [0x42,0x42,0x76,0xab]
	ldq $ab, x					; CHECK: encoding: [0x42,0x42,0xb5,0xab]
	deq $ab, x					; CHECK: encoding: [0x42,0x42,0xd6,0xab]
	inq $ab, x					; CHECK: encoding: [0x42,0x42,0xf6,0xab]

	; Absolute quad, X indexed (NEG NEG prefix)
	aslq $eaea, x				; CHECK: encoding: [0x42,0x42,0x1e,0xea,0xea]
	rolq $eaea, x				; CHECK: encoding: [0x42,0x42,0x3e,0xea,0xea]
	lsrq $eaea, x				; CHECK: encoding: [0x42,0x42,0x5e,0xea,0xea]
	rorq $eaea, x				; CHECK: encoding: [0x42,0x42,0x7e,0xea,0xea]
	ldq $eaea, y                ; CHECK: encoding: [0x42,0x42,0xb9,0xea,0xea]
	ldq $eaea, x				; CHECK: encoding: [0x42,0x42,0xbd,0xea,0xea]
	deq $eaea, x				; CHECK: encoding: [0x42,0x42,0xde,0xea,0xea]
	inq $eaea, x				; CHECK: encoding: [0x42,0x42,0xfe,0xea,0xea]

	ldq ($ea), y                ; CHECK: encoding: [0x42,0x42,0xb1,0xea]
	ldq ($ea, sp), y            ; CHECK: encoding: [0x42,0x42,0xe2,0xea]
