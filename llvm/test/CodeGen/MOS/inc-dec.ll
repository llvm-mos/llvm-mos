; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs < %s | FileCheck %s

target datalayout = "e-m:e-p:16:8-p1:8:8-i16:8-i32:8-i64:8-f32:8-f64:8-a:8-Fi8-n8"
target triple = "mos"

@g = global i16 0

define i8 @inc_i8(i8 %a) {
; CHECK-LABEL: inc_i8:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #1
; CHECK-NEXT:    rts
entry:
  %0 = add i8 %a, 1
  ret i8 %0
}

define i16 @inc_i16(i16 %a) {
; CHECK-LABEL: inc_i16:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #1
; CHECK-NEXT:    bne .LBB1_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    inx
; CHECK-NEXT:  .LBB1_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = add i16 %a, 1
  ret i16 %0
}

define i32 @inc_i32(i32 %a) {
; CHECK-LABEL: inc_i32:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #1
; CHECK-NEXT:    bne .LBB2_6
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    inx
; CHECK-NEXT:    bne .LBB2_5
; CHECK-NEXT:  ; %bb.2: ; %entry
; CHECK-NEXT:    inc mos8(__rc2)
; CHECK-NEXT:    bne .LBB2_4
; CHECK-NEXT:  ; %bb.3: ; %entry
; CHECK-NEXT:    inc mos8(__rc3)
; CHECK-NEXT:  .LBB2_4: ; %entry
; CHECK-NEXT:  .LBB2_5: ; %entry
; CHECK-NEXT:  .LBB2_6: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = add i32 %a, 1
  ret i32 %0
}

define i8* @inc_ptr(i8* %a) {
; CHECK-LABEL: inc_ptr:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    inc mos8(__rc2)
; CHECK-NEXT:    bne .LBB3_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    inc mos8(__rc3)
; CHECK-NEXT:  .LBB3_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = getelementptr i8, i8* %a, i32 1
  ret i8* %0
}

define void @inc_global() {
; CHECK-LABEL: inc_global:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    inc g
; CHECK-NEXT:    bne .LBB4_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    inc g+1
; CHECK-NEXT:  .LBB4_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = load i16, i16* @g
  %1 = add i16 %0, 1
  store i16 %1, i16* @g
  ret void
}

define i8 @dec_i8(i8 %a) {
; CHECK-LABEL: dec_i8:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #255
; CHECK-NEXT:    rts
entry:
  %0 = add i8 %a, -1
  ret i8 %0
}

define i16 @dec_i16(i16 %a) {
; CHECK-LABEL: dec_i16:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    tay
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #255
; CHECK-NEXT:    cpy #0
; CHECK-NEXT:    bne .LBB6_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    dex
; CHECK-NEXT:  .LBB6_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = add i16 %a, -1
  ret i16 %0
}

define i32 @dec_i32(i32 %a) {
; CHECK-LABEL: dec_i32:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    tay
; CHECK-NEXT:    clc
; CHECK-NEXT:    adc #255
; CHECK-NEXT:    cpy #0
; CHECK-NEXT:    bne .LBB7_6
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    pha
; CHECK-NEXT:    txa
; CHECK-NEXT:    tay
; CHECK-NEXT:    pla
; CHECK-NEXT:    dex
; CHECK-NEXT:    cpy #0
; CHECK-NEXT:    bne .LBB7_5
; CHECK-NEXT:  ; %bb.2: ; %entry
; CHECK-NEXT:    ldy mos8(__rc2)
; CHECK-NEXT:    dec mos8(__rc2)
; CHECK-NEXT:    cpy #0
; CHECK-NEXT:    bne .LBB7_4
; CHECK-NEXT:  ; %bb.3: ; %entry
; CHECK-NEXT:    dec mos8(__rc3)
; CHECK-NEXT:  .LBB7_4: ; %entry
; CHECK-NEXT:  .LBB7_5: ; %entry
; CHECK-NEXT:  .LBB7_6: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = add i32 %a, -1
  ret i32 %0
}

define i8* @dec_ptr(i8* %a) {
; CHECK-LABEL: dec_ptr:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    ldx mos8(__rc2)
; CHECK-NEXT:    dec mos8(__rc2)
; CHECK-NEXT:    cpx #0
; CHECK-NEXT:    bne .LBB8_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    dec mos8(__rc3)
; CHECK-NEXT:  .LBB8_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = getelementptr i8, i8* %a, i32 -1
  ret i8* %0
}

define void @dec_global() {
; CHECK-LABEL: dec_global:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    ldx g
; CHECK-NEXT:    dec g
; CHECK-NEXT:    cpx #0
; CHECK-NEXT:    bne .LBB9_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    dec g+1
; CHECK-NEXT:  .LBB9_2: ; %entry
; CHECK-NEXT:    rts
entry:
  %0 = load i16, i16* @g
  %1 = add i16 %0, -1
  store i16 %1, i16* @g
  ret void
}
