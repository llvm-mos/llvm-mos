# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=mos-shift-rotate-chain -verify-machineinstrs -o - %s | FileCheck %s
---
name: single_shl
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: single_shl
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234
    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_SHL %0, %1
    G_STORE_ABS %2, 1234
...
---
name: chained_shl
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_shl
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_SHL %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 3
    %4:any(s8) = G_SHL %0, %3
    G_STORE_ABS %4, 1234
...
---
name: chained_shl_reverse_order
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_shl_reverse_order
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C1]](s8)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL1]](s8), 1234
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 3
    %2:any(s8) = G_SHL %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 1
    %4:any(s8) = G_SHL %0, %3
    G_STORE_ABS %4, 1234
...
---
name: chained_lshr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_lshr
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:any(s8) = G_LSHR [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[LSHR]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:any(s8) = G_LSHR [[LSHR]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[LSHR1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_LSHR %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 3
    %4:any(s8) = G_LSHR %0, %3
    G_STORE_ABS %4, 1234
...
---
name: chained_ashr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_ashr
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:any(s8) = G_ASHR [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ASHR]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:any(s8) = G_ASHR [[ASHR]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ASHR1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ASHR %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 3
    %4:any(s8) = G_ASHR %0, %3
    G_STORE_ABS %4, 1234
...
---
name: chained_rotl
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_rotl
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ROTL:%[0-9]+]]:any(s8) = G_ROTL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ROTL]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[ROTL1:%[0-9]+]]:any(s8) = G_ROTL [[ROTL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ROTL1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ROTL %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 3
    %4:any(s8) = G_ROTL %0, %3
    G_STORE_ABS %4, 1234
...
---
name: chained_rotr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: chained_rotr
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ROTR:%[0-9]+]]:any(s8) = G_ROTR [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ROTR]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[ROTR1:%[0-9]+]]:any(s8) = G_ROTR [[ROTR]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[ROTR1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ROTR %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 3
    %4:any(s8) = G_ROTR %0, %3
    G_STORE_ABS %4, 1234
...
---
name: different_opcodes_separate_chains
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: different_opcodes_separate_chains
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 4
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL1]](s8), 1234
    ; CHECK-NEXT: [[C3:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:any(s8) = G_LSHR [[LOAD_ABS]], [[C3]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[LSHR]](s8), 1234
    ; CHECK-NEXT: [[C4:%[0-9]+]]:any(s8) = G_CONSTANT i8 4
    ; CHECK-NEXT: [[C5:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:any(s8) = G_LSHR [[LSHR]], [[C5]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[LSHR1]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_SHL %0, %1
    G_STORE_ABS %2, 1234

    %3:any(s8) = G_CONSTANT i8 4
    %4:any(s8) = G_SHL %0, %3
    G_STORE_ABS %4, 1234

    %5:any(s8) = G_CONSTANT i8 3
    %6:any(s8) = G_LSHR %0, %5
    G_STORE_ABS %6, 1234

    %7:any(s8) = G_CONSTANT i8 4
    %8:any(s8) = G_LSHR %0, %7
    G_STORE_ABS %8, 1234
...
---
name: different_base_separate_chains
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: different_base_separate_chains
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[LOAD_ABS1:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 4
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL1]](s8), 1234
    ; CHECK-NEXT: [[C3:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[SHL2:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS1]], [[C3]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL2]](s8), 1234
    ; CHECK-NEXT: [[C4:%[0-9]+]]:any(s8) = G_CONSTANT i8 4
    ; CHECK-NEXT: [[C5:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[SHL3:%[0-9]+]]:any(s8) = G_SHL [[SHL2]], [[C5]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[SHL3]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234
    %1:any(s8) = G_LOAD_ABS 1234

    %2:any(s8) = G_CONSTANT i8 1
    %3:any(s8) = G_SHL %0, %2
    G_STORE_ABS %3, 1234

    %4:any(s8) = G_CONSTANT i8 4
    %5:any(s8) = G_SHL %0, %4
    G_STORE_ABS %5, 1234

    %6:any(s8) = G_CONSTANT i8 3
    %7:any(s8) = G_SHL %1, %6
    G_STORE_ABS %7, 1234

    %8:any(s8) = G_CONSTANT i8 4
    %9:any(s8) = G_SHL %1, %8
    G_STORE_ABS %9, 1234
...
---
name: move_across_mbb
body: |
  ; CHECK-LABEL: name: move_across_mbb
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
  ; CHECK-NEXT:   [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
  ; CHECK-NEXT:   [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
  ; CHECK-NEXT:   [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C1]](s8)
  ; CHECK-NEXT:   [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
  ; CHECK-NEXT:   [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
  ; CHECK-NEXT:   G_STORE_ABS [[SHL1]](s8), 1234
  ; CHECK-NEXT:   JMP %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   G_STORE_ABS [[SHL]](s8), 1234
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s8) = G_CONSTANT i8 3
    %2:any(s8) = G_SHL %0, %1
    G_STORE_ABS %2, 1234
    JMP %bb.1

  bb.1:
    %3:any(s8) = G_CONSTANT i8 1
    %4:any(s8) = G_SHL %0, %3
    G_STORE_ABS %4, 1234
    RTS
...
---
name: move_to_nearest_common_dominator
body: |
  ; CHECK-LABEL: name: move_to_nearest_common_dominator
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
  ; CHECK-NEXT:   [[LOAD_ABS1:%[0-9]+]]:any(s1) = G_LOAD_ABS 1234
  ; CHECK-NEXT:   [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
  ; CHECK-NEXT:   [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
  ; CHECK-NEXT:   G_BRCOND [[LOAD_ABS1]](s1), %bb.2
  ; CHECK-NEXT:   JMP %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
  ; CHECK-NEXT:   [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
  ; CHECK-NEXT:   [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
  ; CHECK-NEXT:   G_STORE_ABS [[SHL1]](s8), 1234
  ; CHECK-NEXT:   RTS
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   G_STORE_ABS [[SHL]](s8), 1234
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    %0:any(s8) = G_LOAD_ABS 1234

    %1:any(s1) = G_LOAD_ABS 1234
    G_BRCOND %1, %bb.2
    JMP %bb.1

  bb.1:
    %2:any(s8) = G_CONSTANT i8 3
    %3:any(s8) = G_SHL %0, %2
    G_STORE_ABS %3, 1234
    RTS

  bb.2:
    %4:any(s8) = G_CONSTANT i8 1
    %5:any(s8) = G_SHL %0, %4
    G_STORE_ABS %5, 1234
    RTS
...
---
name: retain_dominating_amount
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: retain_dominating_amount
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:any(s8) = G_LOAD_ABS 1234
    ; CHECK-NEXT: [[C:%[0-9]+]]:any(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:any(s8) = G_CONSTANT i8 3
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:any(s8) = G_SHL [[LOAD_ABS]], [[C]](s8)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:any(s8) = G_SHL [[SHL]], [[C2]](s8)
    ; CHECK-NEXT: G_STORE_ABS [[C1]](s8), 1234
    ; CHECK-NEXT: G_STORE_ABS [[SHL]](s8), 1234
    %0:any(s8) = G_LOAD_ABS 1234
    %1:any(s8) = G_CONSTANT i8 1

    %2:any(s8) = G_CONSTANT i8 3
    %3:any(s8) = G_SHL %0, %2
    G_STORE_ABS %2, 1234

    %4:any(s8) = G_SHL %0, %1
    G_STORE_ABS %4, 1234
...
