# RUN: llc -mtriple=mos -mcpu=mos65c02 -start-after=machine-opt-remark-emitter -verify-machineinstrs -o - %s | FileCheck %s
---
name: asl_zeropage
# CHECK-LABEL: asl_zeropage
body: |
  bb.0.entry:
    $rc0, $c = ASL $rc0
    ; CHECK: asl mos8(__rc0)
    RTS
    ; CHECK-NEXT: rts
...
---
name: asl_accumulator
# CHECK-LABEL: asl_accumulator
body: |
  bb.0.entry:
    ; CHECK-LABEL: bb.0
    $a, $c = ASL $a
    ; CHECK: asl
    RTS
    ; CHECK-NEXT: rts
...
---
name: bcs_relative
# CHECK-LABEL: bcs_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $c, 1
    ; CHECK: [[BLOCK:\.L.*]]: ; %entry
    ; CHECK: bcs [[BLOCK]]
    RTS
    ; CHECK-NEXT: rts
...
---
name: bcc_relative
# CHECK-LABEL: bcc_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $c, 0
    ; CHECK: [[BLOCK:\.L.*]]: ; %entry
    ; CHECK: bcc [[BLOCK]]
    RTS
    ; CHECK-NEXT: rts
...
---
name: cmp_immediate
# CHECK-LABEL: cmp_immediate
body: |
  bb.0.entry:
    $c = CMPImm $a, 42
    ; CHECK: cmp #42
    RTS
    ; CHECK-NEXT: rts
...
---
name: cmp_zeropage
# CHECK-LABEL: cmp_zeropage
body: |
  bb.0.entry:
    $c = CMPImag8 $a, $rc0
    ; CHECK: cmp mos8(__rc0)
    RTS
    ; CHECK-NEXT: rts
...
---
name: lda_immediate
# CHECK-LABEL: lda_immediate
body: |
  bb.0.entry:
    $a = LDImm 42
    ; CHECK: lda #42
    RTS
    ; CHECK-NEXT: rts
...
---
name: lda_absolutex
# CHECK-LABEL: lda_absolutex
body: |
  bb.0.entry:
    $a = LDAIdx 1234, $x
    ; CHECK: lda 1234,x
    RTS
    ; CHECK-NEXT: rts
...
---
name: clc_implied
# CHECK-LABEL: clc_implied
body: |
  bb.0.entry:
    $c = LDCImm 0
    ; CHECK: clc{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: sec_implied
# CHECK-LABEL: sec_implied
body: |
  bb.0.entry:
    $c = LDCImm -1
    ; CHECK: sec{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: dex_implied
# CHECK-LABEL: dex_implied
body: |
  bb.0.entry:
    $x = DE $x
    ; CHECK: dex{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: inx_implied
# CHECK-LABEL: inx_implied
body: |
  bb.0.entry:
    $x = IN $x
    ; CHECK: inx{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: pha_implied
# CHECK-LABEL: pha_implied
body: |
  bb.0.entry:
    PH $a
    ; CHECK: pha{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: pla_implied
# CHECK-LABEL: pla_implied
body: |
  bb.0.entry:
    $a = PL
    ; CHECK: pla{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: phx_implied
# CHECK-LABEL: phx_implied
body: |
  bb.0.entry:
    PH $x
    ; CHECK: phx{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: plx_implied
# CHECK-LABEL: plx_implied
body: |
  bb.0.entry:
    $x = PL
    ; CHECK: plx{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: phy_implied
# CHECK-LABEL: phy_implied
body: |
  bb.0.entry:
    PH $y
    ; CHECK: phy{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: ply_implied
# CHECK-LABEL: ply_implied
body: |
  bb.0.entry:
    $y = PL
    ; CHECK: ply{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: sta_absolutex
# CHECK-LABEL: sta_absolutex
body: |
  bb.0.entry:
    STIdx $a, 1234, $x
    ; CHECK: sta 1234,x
    RTS
    ; CHECK-NEXT: rts
...
---
name: sta_zeropage
# CHECK-LABEL: sta_zeropage
body: |
  bb.0.entry:
    $rc0 = STImag8 $a
    ; CHECK: sta mos8(__rc0)
    RTS
    ; CHECK-NEXT: rts
...
---
name: sty_zeropage
# CHECK-LABEL: sty_zeropage
body: |
  bb.0.entry:
    $rc0 = STImag8 $y
    ; CHECK: sty mos8(__rc0)
    RTS
    ; CHECK-NEXT: rts
...
---
name: stz_absolute
# CHECK-LABEL: stz_absolute
body: |
  bb.0.entry:
    STZAbs 1234
    ; CHECK: stz 1234
    RTS
    ; CHECK-NEXT: rts
...
---
name: stz_absolutex
# CHECK-LABEL: stz_absolutex
body: |
  bb.0.entry:
    STZIdx 1234, $x
    ; CHECK: stz 1234,x
    RTS
    ; CHECK-NEXT: rts
...
---
name: stz_zeropage
# CHECK-LABEL: stz_zeropage
body: |
  bb.0.entry:
    $rc0 = STZImag8
    ; CHECK: stz mos8(__rc0)
    RTS
    ; CHECK-NEXT: rts
...
---
name: txa_implied
# CHECK-LABEL: txa_implied
body: |
  bb.0.entry:
    $a = T_A $x
    ; CHECK: txa{{$}}
    RTS
    ; CHECK-NEXT: rts
...
---
name: external_symbol_offset
# CHECK-LABEL: external_symbol_offset
body: |
  bb.0.entry:
    $a = LDAbs &external + 1
    ; CHECK: lda external+1
    RTS
    ; CHECK-NEXT: rts
...
---
name: global_operand
# CHECK-LABEL: global_operand
body: |
  bb.0.entry:
    INLINEASM &"sta $0", 9 /* sideeffect mayload attdialect */, 13 /* imm */, @global_operand
    ; CHECK: sta global_operand
    RTS
    ; CHECK: rts
...
---
name: imm_operand
# CHECK-LABEL: imm_operand
body: |
  bb.0.entry:
    INLINEASM &"sta $0", 9 /* sideeffect mayload attdialect */, 13 /* imm */, 42
    ; CHECK: sta 42
    RTS
    ; CHECK: rts
...
---
name: memory_operand
# CHECK-LABEL: memory_operand
body: |
  bb.0.entry:
    INLINEASM &"sta ($0),y", 17 /* sideeffect maystore attdialect */, 196622 /* mem:m */, $rs2
    ; CHECK: sta (mos8(__rc4)),y
    RTS
    ; CHECK: rts
...
---
name: gpr_operand
# CHECK-LABEL: gpr_operand
body: |
  bb.0.entry:
    INLINEASM &"st$0 1234", 1 /* sideeffect attdialect */, 720905 /* reguse:GPR */, $x
    ; CHECK: stx 1234
    RTS
    ; CHECK: rts
...
