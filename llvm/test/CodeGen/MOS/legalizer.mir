# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=legalizer -verify-machineinstrs -o - %s | FileCheck %s
---
name: const_ptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: const_ptr
    ; CHECK: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -46
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 4
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[C]](s8), [[C1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: RTS implicit [[INTTOPTR]](p0)
    %0:_(p0) = G_CONSTANT i16 1234
    RTS implicit %0
...
---
name: sext_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: sext_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: [[SELECT2:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: [[SELECT3:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s8), implicit [[SELECT1]](s8), implicit [[SELECT2]](s8), implicit [[SELECT3]](s8)
    %0:_(s1) = COPY $c
    %1:_(s32) = G_SEXT %0
    %2:_(s8), %3:_(s8), %4:_(s8), %5:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3, implicit %4, implicit %5
...
---
name: sext_8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: sext_8
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[SELECT]](s8), implicit [[SELECT]](s8), implicit [[SELECT]](s8)
    %0:_(s8) = COPY $a
    %1:_(s32) = G_SEXT %0
    %2:_(s8), %3:_(s8), %4:_(s8), %5:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3, implicit %4, implicit %5
...
---
name: sext_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: sext_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[COPY1]](s8), implicit [[SELECT]](s8), implicit [[SELECT]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $a
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s32) = G_SEXT %2
    %4:_(s8), %5:_(s8), %6:_(s8), %7:_(s8) = G_UNMERGE_VALUES %3
    RTS implicit %4, implicit %5, implicit %6, implicit %7
...
---
name: sext_32_24
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: sext_32_24
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY $y
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY2]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY3]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[COPY1]](s8), implicit [[COPY2]](s8), implicit [[SELECT]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = COPY $y
    %3:_(s24) = G_MERGE_VALUES %0, %1, %2
    %4:_(s32) = G_SEXT %3
    %5:_(s8), %6:_(s8), %7:_(s8), %8:_(s8) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6, implicit %7, implicit %8
...
---
name: zext_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: zext_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C1]], [[C1]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s8), implicit [[SELECT1]](s8)
    %0:_(s1) = COPY $c
    %1:_(s16) = G_ZEXT %0
    %2:_(s8), %3:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3
...
---
name: zext_8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: zext_8
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[C]](s8)
    %0:_(s8) = COPY $a
    %1:_(s16) = G_ZEXT %0
    %2:_(s8), %3:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3
...
---
name: zext_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: zext_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: RTS implicit [[UV]](s8), implicit [[UV1]](s8), implicit [[C]](s8), implicit [[C]](s8)
    %0:_(s16) = COPY $rs1
    %1:_(s32) = G_ZEXT %0
    %2:_(s8), %3:_(s8), %4:_(s8), %5:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3, implicit %4, implicit %5
...
---
name: trunc_anyext
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: trunc_anyext
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[COPY]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s1)
    %1:_(s1) = COPY $c
    %2:_(s8) = G_ANYEXT %1
    %3:_(s1) = G_TRUNC %2
    RTS implicit %3
...
---
name: unmerge_anyext_to_copy
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: unmerge_anyext_to_copy
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[COPY]](s8)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s8) = G_IMPLICIT_DEF
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8), implicit [[DEF]](s8)
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ANYEXT %1
    %3:_(s8), %4:_(s8) = G_UNMERGE_VALUES %2
    RTS implicit %3, implicit %4
...
---
name: unmerge_anyext_to_unmerge
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: unmerge_anyext_to_unmerge
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s8) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: RTS implicit [[UV]](s8), implicit [[UV1]](s8), implicit [[DEF]](s8), implicit [[COPY1]](s8)
    %1:_(s16) = COPY $rs1
    %2:_(s32) = G_ANYEXT %1
    %3:_(s8), %4:_(s8), %5:_(s8), %6:_(s8) = G_UNMERGE_VALUES %2
    RTS implicit %3, implicit %4, implicit %5, implicit %6
...
---
name: bswap_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: bswap_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[UV1]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[UV]](s8)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[COPY1]](s8), [[COPY2]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = G_BSWAP %0
    RTS implicit %1
...
---
name: bswap_17
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: bswap_17
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s8) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[UV1]](s8)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[UV]](s8)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY1]], [[C]]
    ; CHECK-NEXT: [[SHLE2:%[0-9]+]]:_(s8), [[SHLE3:%[0-9]+]]:_(s1) = G_SHLE [[COPY2]], [[SHLE1]]
    ; CHECK-NEXT: [[SHLE4:%[0-9]+]]:_(s8), [[SHLE5:%[0-9]+]]:_(s1) = G_SHLE [[COPY3]], [[SHLE3]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[SHLE2]](s8), [[SHLE4]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s17) = G_ANYEXT %0
    %2:_(s17) = G_BSWAP %1
    %3:_(s16) = G_TRUNC %2
    RTS implicit %3
...
---
name: inc_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C1]], [[C2]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = G_CONSTANT i16 1
    %2:_(s16) = G_ADD %0, %1
    RTS implicit %2
...
---
name: inc_by_sub
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_by_sub
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C1]], [[C2]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = G_CONSTANT i16 -1
    %2:_(s16) = G_SUB %0, %1
    RTS implicit %2
...
---
name: inc_32
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_32
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C1]], [[C2]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[ADD1]], [[C1]], [[C2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC9]](s1)
    ; CHECK-NEXT: [[ADD2:%[0-9]+]]:_(s8) = G_ADD [[UV2]], [[C]]
    ; CHECK-NEXT: [[SBC10:%[0-9]+]]:_(s8), [[SBC11:%[0-9]+]]:_(s1), [[SBC12:%[0-9]+]]:_, [[SBC13:%[0-9]+]]:_, [[SBC14:%[0-9]+]]:_ = G_SBC [[ADD2]], [[C1]], [[C2]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s1) = COPY [[SBC14]](s1)
    ; CHECK-NEXT: [[ADD3:%[0-9]+]]:_(s8) = G_ADD [[UV3]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY4]](s1), [[ADD3]], [[UV3]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[COPY3]](s1), [[ADD2]], [[UV2]]
    ; CHECK-NEXT: [[SELECT2:%[0-9]+]]:_(s8) = G_SELECT [[COPY3]](s1), [[SELECT]], [[UV3]]
    ; CHECK-NEXT: [[SELECT3:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[SELECT4:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[SELECT1]], [[UV2]]
    ; CHECK-NEXT: [[SELECT5:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[SELECT2]], [[UV3]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT3]](s8)
    ; CHECK-NEXT: [[MV1:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[SELECT4]](s8), [[SELECT5]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16), implicit [[MV1]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = COPY $rs2
    %2:_(s32) = G_MERGE_VALUES %0, %1
    %3:_(s32) = G_CONSTANT i32 1
    %4:_(s32) = G_ADD %2, %3
    %5:_(s16), %6:_(s16) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: dec_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = G_CONSTANT i16 1
    %2:_(s16) = G_SUB %0, %1
    RTS implicit %2
...
---
name: dec_by_add
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_by_add
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = G_CONSTANT i16 -1
    %2:_(s16) = G_ADD %0, %1
    RTS implicit %2
...
---
name: dec_32
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_32
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s8) = G_ADD [[UV]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[ADD]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s8) = G_ADD [[UV1]], [[C]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[ADD1]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC9]](s1)
    ; CHECK-NEXT: [[ADD2:%[0-9]+]]:_(s8) = G_ADD [[UV2]], [[C]]
    ; CHECK-NEXT: [[SBC10:%[0-9]+]]:_(s8), [[SBC11:%[0-9]+]]:_(s1), [[SBC12:%[0-9]+]]:_, [[SBC13:%[0-9]+]]:_, [[SBC14:%[0-9]+]]:_ = G_SBC [[ADD2]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s1) = COPY [[SBC14]](s1)
    ; CHECK-NEXT: [[ADD3:%[0-9]+]]:_(s8) = G_ADD [[UV3]], [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY4]](s1), [[ADD3]], [[UV3]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[COPY3]](s1), [[ADD2]], [[UV2]]
    ; CHECK-NEXT: [[SELECT2:%[0-9]+]]:_(s8) = G_SELECT [[COPY3]](s1), [[SELECT]], [[UV3]]
    ; CHECK-NEXT: [[SELECT3:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[ADD1]], [[UV1]]
    ; CHECK-NEXT: [[SELECT4:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[SELECT1]], [[UV2]]
    ; CHECK-NEXT: [[SELECT5:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[SELECT2]], [[UV3]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[ADD]](s8), [[SELECT3]](s8)
    ; CHECK-NEXT: [[MV1:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[SELECT4]](s8), [[SELECT5]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16), implicit [[MV1]](s16)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = COPY $rs2
    %2:_(s32) = G_MERGE_VALUES %0, %1
    %3:_(s32) = G_CONSTANT i32 1
    %4:_(s32) = G_SUB %2, %3
    %5:_(s16), %6:_(s16) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: usubsat
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: usubsat
    ; CHECK: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 16
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 32
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[C]], [[C1]], [[C3]]
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[SBC1]](s1), [[C2]], [[C3]]
    ; CHECK-NEXT: [[C4:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[SELECT]](s1), [[C4]], [[COPY]]
    ; CHECK-NEXT: RTS implicit [[SELECT1]](s8)
    %0:_(s8) = G_CONSTANT i8 16
    %1:_(s8) = G_CONSTANT i8 32
    %2:_(s8) = G_USUBSAT %0, %1
    RTS implicit %2
...
---
name: shl_1_8bit
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_1_8bit
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[SHLE]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 1
    %2:_(s8) = G_SHL %0, %1
    RTS implicit %2
...
---
name: shl_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY $y
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY $rc0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[C]]
    ; CHECK-NEXT: [[SHLE2:%[0-9]+]]:_(s8), [[SHLE3:%[0-9]+]]:_(s1) = G_SHLE [[COPY1]], [[SHLE1]]
    ; CHECK-NEXT: [[SHLE4:%[0-9]+]]:_(s8), [[SHLE5:%[0-9]+]]:_(s1) = G_SHLE [[COPY2]], [[SHLE3]]
    ; CHECK-NEXT: [[SHLE6:%[0-9]+]]:_(s8), [[SHLE7:%[0-9]+]]:_(s1) = G_SHLE [[COPY3]], [[SHLE5]]
    ; CHECK-NEXT: RTS implicit [[SHLE]](s8), implicit [[SHLE2]](s8), implicit [[SHLE4]](s8), implicit [[SHLE6]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = COPY $y
    %3:_(s8) = COPY $rc0
    %4:_(s32) = G_MERGE_VALUES %0, %1, %2, %3
    %5:_(s32) = G_CONSTANT i32 1
    %6:_(s32) = G_SHL %4, %5
    %7:_(s8), %8:_(s8), %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %6
    RTS implicit %7, implicit %8, implicit %9, implicit %10
...
---
name: shl_2
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_2
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[C]]
    ; CHECK-NEXT: [[SHLE2:%[0-9]+]]:_(s8), [[SHLE3:%[0-9]+]]:_(s1) = G_SHLE [[COPY1]], [[SHLE1]]
    ; CHECK-NEXT: [[SHLE4:%[0-9]+]]:_(s8), [[SHLE5:%[0-9]+]]:_(s1) = G_SHLE [[SHLE]], [[C]]
    ; CHECK-NEXT: [[SHLE6:%[0-9]+]]:_(s8), [[SHLE7:%[0-9]+]]:_(s1) = G_SHLE [[SHLE2]], [[SHLE5]]
    ; CHECK-NEXT: RTS implicit [[SHLE4]](s8), implicit [[SHLE6]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s16) = G_CONSTANT i16 2
    %4:_(s16) = G_SHL %2, %3
    %5:_(s8), %6:_(s8) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: shl_5
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_5
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY1]], [[C1]]
    ; CHECK-NEXT: [[LSHRE2:%[0-9]+]]:_(s8), [[LSHRE3:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[LSHRE1]]
    ; CHECK-NEXT: [[LSHRE4:%[0-9]+]]:_(s8), [[LSHRE5:%[0-9]+]]:_(s1) = G_LSHRE [[C]], [[LSHRE3]]
    ; CHECK-NEXT: [[LSHRE6:%[0-9]+]]:_(s8), [[LSHRE7:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE]], [[C1]]
    ; CHECK-NEXT: [[LSHRE8:%[0-9]+]]:_(s8), [[LSHRE9:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE2]], [[LSHRE7]]
    ; CHECK-NEXT: [[LSHRE10:%[0-9]+]]:_(s8), [[LSHRE11:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE4]], [[LSHRE9]]
    ; CHECK-NEXT: [[LSHRE12:%[0-9]+]]:_(s8), [[LSHRE13:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE6]], [[C1]]
    ; CHECK-NEXT: [[LSHRE14:%[0-9]+]]:_(s8), [[LSHRE15:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE8]], [[LSHRE13]]
    ; CHECK-NEXT: [[LSHRE16:%[0-9]+]]:_(s8), [[LSHRE17:%[0-9]+]]:_(s1) = G_LSHRE [[LSHRE10]], [[LSHRE15]]
    ; CHECK-NEXT: RTS implicit [[LSHRE16]](s8), implicit [[LSHRE14]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s16) = G_CONSTANT i16 5
    %4:_(s16) = G_SHL %2, %3
    %5:_(s8), %6:_(s8) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: shl_9
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_9
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[C]], [[C1]]
    ; CHECK-NEXT: [[SHLE2:%[0-9]+]]:_(s8), [[SHLE3:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[SHLE1]]
    ; CHECK-NEXT: RTS implicit [[SHLE]](s8), implicit [[SHLE2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s16) = G_CONSTANT i16 9
    %4:_(s16) = G_SHL %2, %3
    %5:_(s8), %6:_(s8) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: shl_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: RTS implicit [[C]](s8), implicit [[C]](s8), implicit [[COPY]](s8), implicit [[COPY1]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = COPY $y
    %3:_(s8) = COPY $rc0
    %4:_(s32) = G_MERGE_VALUES %0, %1, %2, %3
    %5:_(s32) = G_CONSTANT i32 16
    %6:_(s32) = G_SHL %4, %5
    %7:_(s8), %8:_(s8), %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %6
    RTS implicit %7, implicit %8, implicit %9, implicit %10
...
---
name: shl_var
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_var
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: $a = COPY [[COPY]](s8)
    ; CHECK-NEXT: $x = COPY [[COPY1]](s8)
    ; CHECK-NEXT: JSR &__ashlqi3, mos_csr, implicit $a, implicit $x, implicit-def $a
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = G_SHL %0, %1
    RTS implicit %2
...
---
name: shl_var_17
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: shl_var_17
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[COPY]](s8)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s8) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: $a = COPY [[COPY2]](s8)
    ; CHECK-NEXT: $x = COPY [[COPY3]](s8)
    ; CHECK-NEXT: $rc2 = COPY [[COPY4]](s8)
    ; CHECK-NEXT: $rc3 = COPY [[DEF]](s8)
    ; CHECK-NEXT: $rc4 = COPY [[COPY1]](s8)
    ; CHECK-NEXT: JSR &__ashlsi3, mos_csr, implicit $a, implicit $x, implicit $rc2, implicit $rc3, implicit $rc4, implicit-def $a, implicit-def $x, implicit-def $rc2, implicit-def $rc3
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: RTS implicit [[COPY5]](s8)
    %0:_(s8) = COPY $a
    %1:_(s17) = G_ANYEXT %0
    %2:_(s8) = COPY $x
    %3:_(s17) = G_SHL %1, %2
    %4:_(s8) = G_TRUNC %3
    RTS implicit %4
...
---
name: lshr_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY1]], [[C]]
    ; CHECK-NEXT: [[LSHRE2:%[0-9]+]]:_(s8), [[LSHRE3:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[LSHRE1]]
    ; CHECK-NEXT: RTS implicit [[LSHRE2]](s8), implicit [[LSHRE]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s32) = G_CONSTANT i32 1
    %4:_(s16) = G_LSHR %2, %3
    %5:_(s8), %6:_(s8) = G_UNMERGE_VALUES %4
    RTS implicit %5, implicit %6
...
---
name: lshr_var
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_var
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: $a = COPY [[COPY]](s8)
    ; CHECK-NEXT: $x = COPY [[COPY1]](s8)
    ; CHECK-NEXT: JSR &__lshrqi3, mos_csr, implicit $a, implicit $x, implicit-def $a
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = G_LSHR %0, %1
    RTS implicit %2
...
---
name: ashr_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ashr_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[COPY1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[LSHRE]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 1
    %2:_(s8) = G_ASHR %0, %1
    RTS implicit %2
...
---
name: ashr_7
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ashr_7
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[C3]]
    ; CHECK-NEXT: [[SHLE2:%[0-9]+]]:_(s8), [[SHLE3:%[0-9]+]]:_(s1) = G_SHLE [[SELECT]], [[SHLE1]]
    ; CHECK-NEXT: RTS implicit [[SHLE2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 7
    %2:_(s8) = G_ASHR %0, %1
    RTS implicit %2
...
---
name: ashr_var_17
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ashr_var_17
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[COPY]](s8)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s8) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s8) = COPY [[DEF]](s8)
    ; CHECK-NEXT: $a = COPY [[COPY2]](s8)
    ; CHECK-NEXT: $x = COPY [[COPY3]](s8)
    ; CHECK-NEXT: $rc2 = COPY [[COPY4]](s8)
    ; CHECK-NEXT: $rc3 = COPY [[DEF]](s8)
    ; CHECK-NEXT: $rc4 = COPY [[COPY1]](s8)
    ; CHECK-NEXT: JSR &__ashlsi3, mos_csr, implicit $a, implicit $x, implicit $rc2, implicit $rc3, implicit $rc4, implicit-def $a, implicit-def $x, implicit-def $rc2, implicit-def $rc3
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $rs0, implicit $rs0
    ; CHECK-NEXT: RTS implicit [[COPY5]](s8)
    %0:_(s8) = COPY $a
    %1:_(s17) = G_ANYEXT %0
    %2:_(s8) = COPY $x
    %3:_(s17) = G_SHL %1, %2
    %4:_(s8) = G_TRUNC %3
    RTS implicit %4
...
---
name: ashr_16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ashr_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $y
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $rc0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY2]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[COPY1]](s8), implicit [[SELECT]](s8), implicit [[SELECT]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8) = COPY $y
    %3:_(s8) = COPY $rc0
    %4:_(s32) = G_MERGE_VALUES %0, %1, %2, %3
    %5:_(s32) = G_CONSTANT i32 16
    %6:_(s32) = G_ASHR %4, %5
    %7:_(s8), %8:_(s8), %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %6
    RTS implicit %7, implicit %8, implicit %9, implicit %10
...
---
name: rotl_7
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: rotl_7
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[COPY]](s8)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s1) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY1]], [[DEF]]
    ; CHECK-NEXT: [[LSHRE2:%[0-9]+]]:_(s8), [[LSHRE3:%[0-9]+]]:_(s1) = G_LSHRE [[COPY1]], [[LSHRE1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[LSHRE2]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 7
    %2:_(s8) = G_ROTL %0, %1
    RTS implicit %2
...
---
name: rotr_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: rotr_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s1) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[DEF]]
    ; CHECK-NEXT: [[LSHRE2:%[0-9]+]]:_(s8), [[LSHRE3:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[LSHRE1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[LSHRE2]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 1
    %2:_(s8) = G_ROTR %0, %1
    RTS implicit %2
...
---
name: icmp_ptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ptr
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $rs3
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY]](p0)
    ; CHECK-NEXT: [[PTRTOINT1:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY1]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV1]], [[UV3]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV]], [[UV2]], [[C]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC9]](s1)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[COPY3]], [[C1]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(p0) = COPY $rs1
    %1:_(p0) = COPY $rs3
    %2:_(s1) = G_ICMP intpred(eq), %0, %1
    RTS implicit %2
...
---
name: icmp_s3
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_s3
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 7
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s8) = G_AND [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[AND]](s8)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[AND]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s1)
    %0:_(s8) = COPY $a
    %1:_(s3) = G_TRUNC %0
    %2:_(s3) = G_TRUNC %0
    %3:_(s1) = G_ICMP intpred(eq), %1, %2
    RTS implicit %3
...
---
name: icmp_eq_s16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_eq_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV1]], [[UV3]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV]], [[UV2]], [[C]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC9]](s1)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[COPY3]], [[C1]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = COPY $rs2
    %2:_(s1) = G_ICMP intpred(eq), %0, %1
    RTS implicit %2
...
---
name: icmp_ule_s16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ule_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV1]], [[UV3]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV]], [[UV2]], [[C]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s1) = COPY [[SBC6]](s1)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[COPY4]], [[COPY3]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = COPY $rs2
    %2:_(s1) = G_ICMP intpred(ule), %0, %1
    RTS implicit %2
...
---
name: icmp_slt_s16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_slt_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV]], [[UV2]], [[C]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV1]], [[UV3]], [[SBC1]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s8) = G_XOR [[SBC5]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[SBC8]](s1), [[XOR]], [[SBC5]]
    ; CHECK-NEXT: [[SBC10:%[0-9]+]]:_(s8), [[SBC11:%[0-9]+]]:_(s1), [[SBC12:%[0-9]+]]:_, [[SBC13:%[0-9]+]]:_, [[SBC14:%[0-9]+]]:_ = G_SBC [[SELECT]], [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SBC12]](s1)
    %0:_(s16) = COPY $rs1
    %1:_(s16) = COPY $rs2
    %2:_(s1) = G_ICMP intpred(slt), %0, %1
    RTS implicit %2
...
---
name: icmp_eq
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_eq
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(eq), %0, %1
    RTS implicit %2
...
---
name: icmp_ne
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ne
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    RTS implicit %2
...
---
name: icmp_ugt
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ugt
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(ugt), %0, %1
    RTS implicit %2
...
---
name: icmp_uge
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_uge
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(uge), %0, %1
    RTS implicit %2
...
---
name: icmp_ult
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ult
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(ult), %0, %1
    RTS implicit %2
...
---
name: icmp_ule
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_ule
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(ule), %0, %1
    RTS implicit %2
...
---
name: icmp_sgt
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_sgt
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[COPY]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s8) = G_XOR [[SBC]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[SBC3]](s1), [[XOR]], [[SBC]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[SELECT]], [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SBC7]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(sgt), %0, %1
    RTS implicit %2
...
---
name: icmp_sge
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_sge
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s8) = G_XOR [[SBC]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[SBC3]](s1), [[XOR]], [[SBC]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[SELECT]], [[C2]], [[C]]
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s1) = G_SELECT [[SBC7]](s1), [[C3]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SELECT1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(sge), %0, %1
    RTS implicit %2
...
---
name: icmp_slt
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_slt
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s8) = G_XOR [[SBC]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[SBC3]](s1), [[XOR]], [[SBC]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[SELECT]], [[C2]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SBC7]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(slt), %0, %1
    RTS implicit %2
...
---
name: icmp_slt_0
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_slt_0
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 0
    %2:_(s1) = G_ICMP intpred(slt), %0, %1
    RTS implicit %2
...
---
name: icmp_slt_0_s16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_slt_0_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s16) = G_MERGE_VALUES %0, %1
    %3:_(s16) = G_CONSTANT i16 0
    %4:_(s1) = G_ICMP intpred(slt), %2, %3
    RTS implicit %4
...
---
name: icmp_sle
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: icmp_sle
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY1]], [[COPY]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 -128
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s8) = G_XOR [[SBC]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[SBC3]](s1), [[XOR]], [[SBC]]
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[SELECT]], [[C2]], [[C]]
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s1) = G_SELECT [[SBC7]](s1), [[C3]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SELECT1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(sle), %0, %1
    RTS implicit %2
...
---
name: select_p
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: select_p
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $alsb
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY1]](p0)
    ; CHECK-NEXT: [[PTRTOINT1:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY2]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT1]](s16)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[UV]], [[UV2]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[UV1]], [[UV3]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[SELECT]](s8), [[SELECT1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: RTS implicit [[INTTOPTR]](p0)
    %0:_(s1) = COPY $alsb
    %1:_(p0) = COPY $rs0
    %2:_(p0) = COPY $rs1
    %3:_(p0) = G_SELECT %0, %1, %2
    RTS implicit %3
...
---
name: abs
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: abs
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(s8) = G_SUB [[C]], [[COPY]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[SUB]], [[COPY]]
    ; CHECK-NEXT: RTS implicit [[SELECT]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_ABS %0
    RTS implicit %1
...
---
name: ptradd
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ptradd
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY1]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[UADDE:%[0-9]+]]:_(s8), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[UV]], [[UV2]], [[C]]
    ; CHECK-NEXT: [[UADDE2:%[0-9]+]]:_(s8), [[UADDE3:%[0-9]+]]:_(s1) = G_UADDE [[UV1]], [[UV3]], [[UADDE1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[UADDE]](s8), [[UADDE2]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: RTS implicit [[INTTOPTR]](p0)
    %0:_(p0) = COPY $rs0
    %1:_(s16) = COPY $rs1
    %2:_(p0) = G_PTR_ADD %0, %1
    RTS implicit %2
...
---
name: uaddo
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: uaddo
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[UADDE:%[0-9]+]]:_(s8), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[UADDE]](s8), implicit [[UADDE1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8), %3:_(s1) = G_UADDO %0, %1
    RTS implicit %2, implicit %3
...
---
name: saddo
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: saddo
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SADDE:%[0-9]+]]:_(s8), [[SADDE1:%[0-9]+]]:_(s1) = G_SADDE [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[SADDE]](s8), implicit [[SADDE1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8), %3:_(s1) = G_SADDO %0, %1
    RTS implicit %2, implicit %3
...
---
name: usubo
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: usubo
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[SBC1]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8), implicit [[SELECT]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8), %3:_(s1) = G_USUBO %0, %1
    RTS implicit %2, implicit %3
...
---
name: ssubo
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ssubo
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC3]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY2]](s8), implicit [[COPY3]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s8), %3:_(s1) = G_SSUBO %0, %1
    RTS implicit %2, implicit %3
...
---
name: usube
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: usube
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY $v
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[SELECT]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s1) = G_SELECT [[SBC1]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: RTS implicit [[COPY3]](s8), implicit [[SELECT1]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = COPY $v
    %3:_(s8), %4:_(s1) = G_USUBE %0, %1, %2
    RTS implicit %3, implicit %4
...
---
name: ssube
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ssube
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY $v
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s1) = G_SELECT [[COPY2]](s1), [[C1]], [[C]]
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[SELECT]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s1) = COPY [[SBC3]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY3]](s8), implicit [[COPY4]](s1)
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = COPY $v
    %3:_(s8), %4:_(s1) = G_SSUBE %0, %1, %2
    RTS implicit %3, implicit %4
...
---
name: load_ptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_ptr
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (load (s8), align 2)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[LOAD_INDIR_IDX1:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C1]] :: (load (s8) from unknown-address + 1)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX]](s8), [[LOAD_INDIR_IDX1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: RTS implicit [[INTTOPTR]](p0)
    %0:_(p0) = COPY $rs0
    %1:_(p0) = G_LOAD %0 :: (load 2)
    RTS implicit %1
...
---
name: load_constant_addr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_constant_addr
    ; CHECK: [[LOAD_ABS:%[0-9]+]]:_(s8) = G_LOAD_ABS 1234 :: (load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_ABS]](s8)
    %0:_(s16) = G_CONSTANT i16 1234
    %1:_(p0) = G_INTTOPTR %0
    %2:_(s8) = G_LOAD %1 :: (load (s8))
    RTS implicit %2
...
---
name: load_constant_ptradd_zext_8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_constant_ptradd_zext_8
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[LOAD_ABS_IDX:%[0-9]+]]:_(s8) = G_LOAD_ABS_IDX 1234, [[COPY]](s8) :: (load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_ABS_IDX]](s8)
    %0:_(p0) = G_CONSTANT i16 1234
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ZEXT %1
    %3:_(p0) = G_PTR_ADD %0, %2
    %4:_(s8) = G_LOAD %3 :: (load (s8))
    RTS implicit %4
...
---
name: load_constant_zext_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_constant_zext_1
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY]](s1), [[C]], [[C1]]
    ; CHECK-NEXT: [[LOAD_ABS_IDX:%[0-9]+]]:_(s8) = G_LOAD_ABS_IDX 1234, [[SELECT]](s8) :: (load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_ABS_IDX]](s8)
    %0:_(p0) = G_CONSTANT i16 1234
    %1:_(s1) = COPY $c
    %2:_(s16) = G_ZEXT %1
    %3:_(p0) = G_PTR_ADD %0, %2
    %4:_(s8) = G_LOAD %3 :: (load (s8))
    RTS implicit %4
...
---
name: load_variable_ptradd_zext_8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_variable_ptradd_zext_8
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[COPY1]] :: (load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_INDIR_IDX]](s8)
    %0:_(p0) = COPY $rs0
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ZEXT %1
    %3:_(p0) = G_PTR_ADD %0, %2
    %4:_(s8) = G_LOAD %3 :: (load (s8))
    RTS implicit %4
...
---
name: load_ptradd_const8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_ptradd_const8
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_INDIR_IDX]](s8)
    %0:_(p0) = COPY $rs0
    %2:_(s16) = G_CONSTANT i16 255
    %3:_(p0) = G_PTR_ADD %0, %2
    %4:_(s8) = G_LOAD %3 :: (load (s8))
    RTS implicit %4
...
---
name: load_ptradd_volatile
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: load_ptradd_volatile
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[UADDE:%[0-9]+]]:_(s8), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[UV]], [[COPY1]], [[C1]]
    ; CHECK-NEXT: [[UADDE2:%[0-9]+]]:_(s8), [[UADDE3:%[0-9]+]]:_(s1) = G_UADDE [[UV1]], [[C]], [[UADDE1]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[UADDE]](s8), [[UADDE2]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[INTTOPTR]](p0), [[C]] :: (volatile load (s8))
    ; CHECK-NEXT: RTS implicit [[LOAD_INDIR_IDX]](s8)
    %0:_(p0) = COPY $rs0
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ZEXT %1
    %3:_(p0) = G_PTR_ADD %0, %2
    %4:_(s8) = G_LOAD %3 :: (volatile load (s8))
    RTS implicit %4
...
---
name: store_ptradd_zext_8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: store_ptradd_zext_8
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[COPY1]](s8), [[COPY]](p0), [[COPY1]] :: (store (s8))
    ; CHECK-NEXT: RTS
    %0:_(p0) = COPY $rs0
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ZEXT %1
    %3:_(p0) = G_PTR_ADD %0, %2
    G_STORE %1, %3 :: (store (s8))
    RTS
...
---
name: store_ptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: store_ptr
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY1]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV]](s8), [[COPY]](p0), [[C]] :: (store (s8), align 2)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV1]](s8), [[COPY]](p0), [[C1]] :: (store (s8) into unknown-address + 1)
    ; CHECK-NEXT: RTS
    %0:_(p0) = COPY $rs0
    %1:_(p0) = COPY $rs1
    G_STORE %1, %0 :: (store 2)
    RTS
...
---
name: sextload
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: sextload
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (load (s8))
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[LOAD_INDIR_IDX]], [[C]], [[C1]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[SBC2]](s1)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s8) = G_SELECT [[COPY1]](s1), [[C2]], [[C]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX]](s8), [[SELECT]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(p0) = COPY $rs1
    %1:_(s16) = G_SEXTLOAD %0 :: (load (s8))
    RTS implicit %1
...
---
name: zextload
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: zextload
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (load (s8))
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX]](s8), [[C]](s8)
    ; CHECK-NEXT: RTS implicit [[MV]](s16)
    %0:_(p0) = COPY $rs1
    %1:_(s16) = G_ZEXTLOAD %0 :: (load (s8))
    RTS implicit %1
...
---
name: brcond
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: brcond
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: G_BRCOND_IMM [[COPY]](s1), %bb.0, 1
    %0:_(s1) = COPY $c
    G_BRCOND %0, %bb.0
...
---
name: brcond_not
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: brcond_not
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: G_BRCOND_IMM [[COPY]](s1), %bb.0, 0
    %0:_(s1) = COPY $c
    %1:_(s1) = G_CONSTANT i1 true
    %2:_(s1) = G_XOR %0, %1
    G_BRCOND %2, %bb.0
...
---
name: brcond_icmp_ne
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: brcond_icmp_ne
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY $x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[COPY]], [[COPY1]], [[C]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC4]](s1)
    ; CHECK-NEXT: G_BRCOND_IMM [[COPY2]](s1), %bb.0, 0
    %0:_(s8) = COPY $a
    %1:_(s8) = COPY $x
    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    G_BRCOND %2, %bb.0
...
---
name: brjt
jumpTable:
  kind: block-address
  entries:
    - id: 0
      blocks: ['%bb.0']
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: brjt
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[LOAD_ABS_IDX:%[0-9]+]]:_(s8) = G_LOAD_ABS_IDX %jump-table.0, [[COPY]](s8)
    ; CHECK-NEXT: [[LOAD_ABS_IDX1:%[0-9]+]]:_(s8) = G_LOAD_ABS_IDX target-flags(hi-jt) %jump-table.0, [[COPY]](s8)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(p0) = G_MERGE_VALUES [[LOAD_ABS_IDX]](s8), [[LOAD_ABS_IDX1]](s8)
    ; CHECK-NEXT: G_BRINDIRECT [[MV]](p0)
    %0:_(p0) = G_JUMP_TABLE %jump-table.0
    %1:_(s8) = COPY $a
    %2:_(s16) = G_ZEXT %1
    G_BRJT %0, %jump-table.0, %2
...
---
name: vaarg
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: vaarg
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (invariant load (s8))
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[LOAD_INDIR_IDX1:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C1]] :: (invariant load (s8) from unknown-address + 1)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX]](s8), [[LOAD_INDIR_IDX1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: [[LOAD_INDIR_IDX2:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[INTTOPTR]](p0), [[C]] :: (invariant load (s8))
    ; CHECK-NEXT: [[LOAD_INDIR_IDX3:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[INTTOPTR]](p0), [[C1]] :: (invariant load (s8) from unknown-address + 1)
    ; CHECK-NEXT: [[MV1:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX2]](s8), [[LOAD_INDIR_IDX3]](s8)
    ; CHECK-NEXT: [[INTTOPTR1:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV1]](s16)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[INTTOPTR]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[UADDE:%[0-9]+]]:_(s8), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[UV]], [[C2]], [[C3]]
    ; CHECK-NEXT: [[UADDE2:%[0-9]+]]:_(s8), [[UADDE3:%[0-9]+]]:_(s1) = G_UADDE [[UV1]], [[C]], [[UADDE1]]
    ; CHECK-NEXT: [[MV2:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[UADDE]](s8), [[UADDE2]](s8)
    ; CHECK-NEXT: [[INTTOPTR2:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV2]](s16)
    ; CHECK-NEXT: [[PTRTOINT1:%[0-9]+]]:_(s16) = G_PTRTOINT [[INTTOPTR2]](p0)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT1]](s16)
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV2]](s8), [[COPY]](p0), [[C]] :: (store (s8))
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV3]](s8), [[COPY]](p0), [[C1]] :: (store (s8) into unknown-address + 1)
    ; CHECK-NEXT: RTS implicit [[INTTOPTR1]](p0)
    %0:_(p0) = COPY $rs1
    %1:_(p0) = G_VAARG %0, 1
    RTS implicit %1
...
---
name: alloca
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: alloca
    ; CHECK: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV]], [[C]], [[C3]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV1]], [[C1]], [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[SBC5]](s8)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[COPY1]](s8), [[COPY3]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: $rs0 = COPY [[INTTOPTR]](p0)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(p0) = COPY [[INTTOPTR]](p0)
    ; CHECK-NEXT: RTS implicit [[COPY4]](p0)
    %0:_(s16) = G_CONSTANT i16 2
    %1:_(p0) = G_DYN_STACKALLOC %0:_(s16), 1
    RTS implicit %1
...
---
name: va_copy
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: va_copy
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[LOAD_INDIR_IDX:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C]] :: (load (s8))
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 1
    ; CHECK-NEXT: [[LOAD_INDIR_IDX1:%[0-9]+]]:_(s8) = G_LOAD_INDIR_IDX [[COPY]](p0), [[C1]] :: (load (s8) from unknown-address + 1)
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[LOAD_INDIR_IDX]](s8), [[LOAD_INDIR_IDX1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[INTTOPTR]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV]](s8), [[COPY1]](p0), [[C]] :: (store (s8))
    ; CHECK-NEXT: G_STORE_INDIR_IDX [[UV1]](s8), [[COPY1]](p0), [[C1]] :: (store (s8) into unknown-address + 1)
    ; CHECK-NEXT: RTS implicit [[COPY1]](p0)
    %0:_(p0) = COPY $rs0
    %1:_(p0) = COPY $rs1
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.va_copy), %1, %0
    RTS implicit %1
...
---
name: dyn_stackalloc
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dyn_stackalloc
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $rs0
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(s16) = G_PTRTOINT [[COPY1]](p0)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s8), [[UV1:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[PTRTOINT]](s16)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s8), [[UV3:%[0-9]+]]:_(s8) = G_UNMERGE_VALUES [[COPY]](s16)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s1) = G_CONSTANT i1 true
    ; CHECK-NEXT: [[SBC:%[0-9]+]]:_(s8), [[SBC1:%[0-9]+]]:_(s1), [[SBC2:%[0-9]+]]:_, [[SBC3:%[0-9]+]]:_, [[SBC4:%[0-9]+]]:_ = G_SBC [[UV]], [[UV2]], [[C1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[SBC]](s8)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s1) = COPY [[SBC1]](s1)
    ; CHECK-NEXT: [[SBC5:%[0-9]+]]:_(s8), [[SBC6:%[0-9]+]]:_(s1), [[SBC7:%[0-9]+]]:_, [[SBC8:%[0-9]+]]:_, [[SBC9:%[0-9]+]]:_ = G_SBC [[UV1]], [[UV3]], [[COPY3]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s8) = COPY [[SBC5]](s8)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s8) = G_CONSTANT i8 -8
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s8) = G_CONSTANT i8 -1
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s8) = G_AND [[COPY2]], [[C2]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s8) = G_AND [[COPY4]], [[C3]]
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(s16) = G_MERGE_VALUES [[AND]](s8), [[AND1]](s8)
    ; CHECK-NEXT: [[INTTOPTR:%[0-9]+]]:_(p0) = G_INTTOPTR [[MV]](s16)
    ; CHECK-NEXT: $rs0 = COPY [[INTTOPTR]](p0)
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(p0) = COPY [[INTTOPTR]](p0)
    ; CHECK-NEXT: RTS implicit [[COPY5]](p0)
    %0:_(s16) = COPY $rs1
    %1:_(p0) = G_DYN_STACKALLOC %0, 8
    RTS implicit %1
...
---
name: cse_shle
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cse_shle
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[SHLE:%[0-9]+]]:_(s8), [[SHLE1:%[0-9]+]]:_(s1) = G_SHLE [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[SHLE]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[SHLE]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8), implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 1
    %2:_(s8) = G_SHL %0, %1
    %3:_(s8) = G_SHL %0, %1
    RTS implicit %2, implicit %3
...
---
name: cse_lshr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cse_lshr
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s1) = G_CONSTANT i1 false
    ; CHECK-NEXT: [[LSHRE:%[0-9]+]]:_(s8), [[LSHRE1:%[0-9]+]]:_(s1) = G_LSHRE [[COPY]], [[C]]
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[LSHRE]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[LSHRE]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8), implicit [[COPY2]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_CONSTANT i8 1
    %2:_(s8) = G_LSHR %0, %1
    %3:_(s8) = G_LSHR %0, %1
    RTS implicit %2, implicit %3
...
---
name: freeze_s1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: freeze_s1
    ; CHECK: [[COPY:%[0-9]+]]:_(s1) = COPY $c
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s1) = COPY [[COPY]](s1)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s1)
    %0:_(s1) = COPY $c
    %1:_(s1) = G_FREEZE %0
    RTS implicit %1
...
---
name: freeze_s8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: freeze_s8
    ; CHECK: [[COPY:%[0-9]+]]:_(s8) = COPY $a
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[COPY]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY1]](s8)
    %0:_(s8) = COPY $a
    %1:_(s8) = G_FREEZE %0
    RTS implicit %1
...
---
name: freeze_s32
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: freeze_s32
    ; CHECK: [[C:%[0-9]+]]:_(s8) = G_CONSTANT i8 2
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s8) = G_CONSTANT i8 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s8) = COPY [[C]](s8)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s8) = COPY [[C1]](s8)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s8) = COPY [[C1]](s8)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s8) = COPY [[C1]](s8)
    ; CHECK-NEXT: RTS implicit [[COPY]](s8), implicit [[COPY1]](s8), implicit [[COPY2]](s8), implicit [[COPY3]](s8)
    %0:_(s32) = G_CONSTANT i32 2
    %1:_(s32) = G_FREEZE %0
    %2:_(s8), %3:_(s8), %4:_(s8), %5:_(s8) = G_UNMERGE_VALUES %1
    RTS implicit %2, implicit %3, implicit %4, implicit %5
...
---
name: freeze_p0
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: freeze_p0
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $rs1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY [[COPY]](p0)
    ; CHECK-NEXT: RTS implicit [[COPY1]](p0)
    %0:_(p0) = COPY $rs1
    %1:_(p0) = G_FREEZE %0
    RTS implicit %1
...
