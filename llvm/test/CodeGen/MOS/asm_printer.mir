# RUN: llc -mtriple=mos -start-after=machine-opt-remark-emitter -verify-machineinstrs -o - %s | FileCheck %s
---
name: adc_immediate
# CHECK-LABEL: adc_immediate
body: |
  bb.0.entry:
    $a, $c = ADCimm $a, 42, $c, implicit-def $nz
    RTS_Implied
# CHECK:      adc #42
# CHECK-NEXT: rts
...
---
name: adc_zeropage
# CHECK-LABEL: adc_zeropage
body: |
  bb.0.entry:
    $a, $c = ADCzpr $a, $rc0, $c, implicit-def $nz
    RTS_Implied
# CHECK:      adc mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: asl_accumulator
# CHECK-LABEL: asl_accumulator
body: |
  bb.0.entry:
    $a, $c = ASL $a, implicit-def $nz
    RTS_Implied
# $ prevents asl from matching the name of the function.
# CHECK:      asl{{$}}
# CHECK-NEXT: rts
...
---
name: asl_zeropage
# CHECK-LABEL: asl_zeropage
body: |
  bb.0.entry:
    $rc0, $c = ASL $rc0, implicit-def $nz
    RTS_Implied
# CHECK:      asl mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: bcc_relative
# CHECK-LABEL: bcc_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $c, 0
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      bcc [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: bcs_relative
# CHECK-LABEL: bcs_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $c, 1
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      bcs [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: beq_relative
# CHECK-LABEL: beq_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $z, 1
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      beq [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: bmi_relative
# CHECK-LABEL: bmi_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $n, 1
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      bmi [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: bne_relative
# CHECK-LABEL: bne_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $z, 0
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      bne [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: bpl_relative
# CHECK-LABEL: bpl_relative
body: |
  bb.0.entry:
    BR %bb.0.entry, $n, 0
    RTS_Implied
# CHECK:      [[BLOCK:L.*]]: ; %entry
# CHECK:      bpl [[BLOCK]]
# CHECK-NEXT: rts
...
---
name: clc_implied
# CHECK-LABEL: clc_implied
body: |
  bb.0.entry:
    $c = LDCimm 0
    RTS_Implied
# CHECK:      clc{{$}}
# CHECK-NEXT: rts
...
---
name: cmp_immediate
# CHECK-LABEL: cmp_immediate
body: |
  bb.0.entry:
    CMPimm $a, 42, implicit-def $nz
    RTS_Implied
# CHECK:      cmp #42
# CHECK-NEXT: rts
...
---
name: cpx_immediate
# CHECK-LABEL: cpx_immediate
body: |
  bb.0.entry:
    CMPimm $x, 42, implicit-def $nz
    RTS_Implied
# CHECK:      cpx #42
# CHECK-NEXT: rts
...
---
name: cpy_immediate
# CHECK-LABEL: cpy_immediate
body: |
  bb.0.entry:
    CMPimm $y, 42, implicit-def $nz
    RTS_Implied
# CHECK:      cpy #42
# CHECK-NEXT: rts
...
---
name: inx_implied
# CHECK-LABEL: inx_implied
body: |
  bb.0.entry:
    $x = IN_ $x, implicit-def $nz
    RTS_Implied
# CHECK:      inx{{$}}
# CHECK-NEXT: rts
...
---
name: iny_implied
# CHECK-LABEL: iny_implied
body: |
  bb.0.entry:
    $y = IN_ $y, implicit-def $nz
    RTS_Implied
# CHECK:      iny{{$}}
# CHECK-NEXT: rts
...
---
name: jmp_absolute
# CHECK-LABEL: jmp_absolute
body: |
  bb.0.entry:
    JMP %bb.0.entry
# CHECK: [[BLOCK:L.*]]: ; %entry
# CHECK: jmp [[BLOCK]]
...
---
name: lda_immediate
# CHECK-LABEL: lda_immediate
body: |
  bb.0.entry:
    $a = LDimm 42, implicit-def $nz
    RTS_Implied
# CHECK:      lda #42
# CHECK-NEXT: rts
...
---
name: ldx_immediate
# CHECK-LABEL: ldx_immediate
body: |
  bb.0.entry:
    $x = LDimm 42, implicit-def $nz
    RTS_Implied
# CHECK:      ldx #42
# CHECK-NEXT: rts
...
---
name: ldy_immediate
# CHECK-LABEL: ldy_immediate
body: |
  bb.0.entry:
    $y = LDimm 42, implicit-def $nz
    RTS_Implied
# CHECK:      ldy #42
# CHECK-NEXT: rts
...
---
name: lda_absolute
# CHECK-LABEL: lda_absolute
body: |
  bb.0.entry:
    $a = LDabs 1234, implicit-def $nz
    RTS_Implied
# CHECK:      lda 1234
# CHECK-NEXT: rts
...
---
name: ldx_absolute
# CHECK-LABEL: ldx_absolute
body: |
  bb.0.entry:
    $x = LDabs 1234, implicit-def $nz
    RTS_Implied
# CHECK:      ldx 1234
# CHECK-NEXT: rts
...
---
name: ldy_absolute
# CHECK-LABEL: ldy_absolute
body: |
  bb.0.entry:
    $y = LDabs 1234, implicit-def $nz
    RTS_Implied
# CHECK:      ldy 1234
# CHECK-NEXT: rts
...
---
name: lda_absolutex
# CHECK-LABEL: lda_absolutex
body: |
  bb.0.entry:
    LDAidx 1234, $x, implicit-def $a, implicit-def $nz
    RTS_Implied
# CHECK:      lda 1234,x
# CHECK-NEXT: rts
...
---
name: lda_absolutey
# CHECK-LABEL: lda_absolutey
body: |
  bb.0.entry:
    LDAidx 1234, $y, implicit-def $a, implicit-def $nz
    RTS_Implied
# CHECK:      lda 1234,y
# CHECK-NEXT: rts
...
---
name: ldx_absolutey
# CHECK-LABEL: ldx_absolutey
body: |
  bb.0.entry:
    LDXidx 1234, implicit-def $x, implicit-def $nz, implicit $y
    RTS_Implied
# CHECK:      ldx 1234,y
# CHECK-NEXT: rts
...
---
name: ldy_absolutex
# CHECK-LABEL: ldy_absolutex
body: |
  bb.0.entry:
    LDYidx 1234, implicit-def $y, implicit-def $nz, implicit $x
    RTS_Implied
# CHECK:      ldy 1234,x
# CHECK-NEXT: rts
...
---
name: lda_indirectindexed
# CHECK-LABEL: lda_indirectindexed
body: |
  bb.0.entry:
    $a = LDyindirr $rs0, $y, implicit-def $nz
    RTS_Implied
# CHECK:      lda (mos8(__rc0)),y
# CHECK-NEXT: rts
...
---
name: lda_zeropage
# CHECK-LABEL: lda_zeropage
body: |
  bb.0.entry:
    $a = LDzpr $rc0, implicit-def $nz
    RTS_Implied
# CHECK:      lda mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: ldx_zeropage
# CHECK-LABEL: ldx_zeropage
body: |
  bb.0.entry:
    $x = LDzpr $rc0, implicit-def $nz
    RTS_Implied
# CHECK:      ldx mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: ldy_zeropage
# CHECK-LABEL: ldy_zeropage
body: |
  bb.0.entry:
    $y = LDzpr $rc0, implicit-def $nz
    RTS_Implied
# CHECK:      ldy mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: pha_implied
# CHECK-LABEL: pha_implied
body: |
  bb.0.entry:
    PHA implicit $a
    RTS_Implied
# CHECK:      pha{{$}}
# CHECK-NEXT: rts
...
---
name: php_implied
# CHECK-LABEL: php_implied
body: |
  bb.0.entry:
    PHP implicit $p
    RTS_Implied
# CHECK:      php{{$}}
# CHECK-NEXT: rts
...
---
name: pla_implied
# CHECK-LABEL: pla_implied
body: |
  bb.0.entry:
    PLA implicit-def $a, implicit-def $nz
    RTS_Implied
# CHECK:      pla{{$}}
# CHECK-NEXT: rts
...
---
name: plp_implied
# CHECK-LABEL: plp_implied
body: |
  bb.0.entry:
    PLP implicit-def $p
    RTS_Implied
# CHECK:      plp{{$}}
# CHECK-NEXT: rts
...
---
name: rol_accumulator
# CHECK-LABEL: rol_accumulator
body: |
  bb.0.entry:
    $a, $c = ROL $a, $c, implicit-def $nz
    RTS_Implied
# CHECK:      rol{{$}}
# CHECK-NEXT: rts
...
---
name: rol_zeropage
# CHECK-LABEL: rol_zeropage
body: |
  bb.0.entry:
    $rc0, $c = ROL $rc0, $c, implicit-def $nz
    RTS_Implied
# CHECK:      rol mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: sbc_immediate
# CHECK-LABEL: sbc_immediate
body: |
  bb.0.entry:
    $a, $c = SBCimm $a, 42, $c, implicit-def $nz
    RTS_Implied
# CHECK:      sbc #42
# CHECK-NEXT: rts
...
---
name: sbc_zeropage
# CHECK-LABEL: sbc_zeropage
body: |
  bb.0.entry:
    $a, $c = SBCzpr $a, $rc0, $c, implicit-def $nz
    RTS_Implied
# CHECK:      sbc mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: sec_implied
# CHECK-LABEL: sec_implied
body: |
  bb.0.entry:
    $c = LDCimm 1
    RTS_Implied
# CHECK:      sec{{$}}
# CHECK-NEXT: rts
...
---
name: sta_absolute
# CHECK-LABEL: sta_absolute
body: |
  bb.0.entry:
    STabs $a, 1234
    RTS_Implied
# CHECK:      sta 1234
# CHECK-NEXT: rts
...
---
name: sta_absolutex
# CHECK-LABEL: sta_absolutex
body: |
  bb.0.entry:
    STidx $a, 1234, $x
    RTS_Implied
# CHECK:      sta 1234,x
# CHECK-NEXT: rts
...
---
name: sta_absolutey
# CHECK-LABEL: sta_absolutey
body: |
  bb.0.entry:
    STidx $a, 1234, $y
    RTS_Implied
# CHECK:      sta 1234,y
# CHECK-NEXT: rts
...
---
name: sta_zeropage
# CHECK-LABEL: sta_zeropage
body: |
  bb.0.entry:
    $rc0 = STzpr $a
    RTS_Implied
# CHECK:      sta mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: sta_indirect_indexed
# CHECK-LABEL: sta_indirect_indexed
body: |
  bb.0.entry:
    STyindirr $a, $rs0, $y
    RTS_Implied
# CHECK:      sta (mos8(__rc0)),y
# CHECK-NEXT: rts
...
---
name: stx_absolute
# CHECK-LABEL: stx_absolute
body: |
  bb.0.entry:
    STabs $x, 1234
    RTS_Implied
# CHECK:      stx 1234
# CHECK-NEXT: rts
...
---
name: stx_zeropage
# CHECK-LABEL: stx_zeropage
body: |
  bb.0.entry:
    $rc0 = STzpr $x
    RTS_Implied
# CHECK:      stx mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: sty_absolute
# CHECK-LABEL: sty_absolute
body: |
  bb.0.entry:
    STabs $y, 1234
    RTS_Implied
# CHECK:      sty 1234
# CHECK-NEXT: rts
...
---
name: sty_zeropage
# CHECK-LABEL: sty_zeropage
body: |
  bb.0.entry:
    $rc0 = STzpr $y
    RTS_Implied
# CHECK:      sty mos8(__rc0)
# CHECK-NEXT: rts
...
---
name: tax_implied
# CHECK-LABEL: tax_implied
body: |
  bb.0.entry:
    $x = TA_ implicit-def $nz, implicit $a
    RTS_Implied
# CHECK:      tax{{$}}
# CHECK-NEXT: rts
...
---
name: tay_implied
# CHECK-LABEL: tay_implied
body: |
  bb.0.entry:
    $y = TA_ implicit-def $nz, implicit $a
    RTS_Implied
# CHECK:      tay{{$}}
# CHECK-NEXT: rts
...
---
name: tsx_implied
# CHECK-LABEL: tsx_implied
body: |
  bb.0.entry:
    TSX implicit-def $x, implicit-def $nz
    RTS_Implied
# CHECK:      tsx{{$}}
# CHECK-NEXT: rts
...
---
name: txa_implied
# CHECK-LABEL: txa_implied
body: |
  bb.0.entry:
    T_A $x, implicit-def $a, implicit-def $nz
    RTS_Implied
# CHECK:      txa{{$}}
# CHECK-NEXT: rts
...
---
name: tya_implied
# CHECK-LABEL: tya_implied
body: |
  bb.0.entry:
    T_A $y, implicit-def $a, implicit-def $nz
    RTS_Implied
# CHECK:      tya{{$}}
# CHECK-NEXT: rts
...
