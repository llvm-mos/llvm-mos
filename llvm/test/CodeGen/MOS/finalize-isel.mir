# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=finalize-isel -verify-machineinstrs -o - %s | FileCheck %s
---
name: selectimm_i1
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $c
    ; CHECK-LABEL: name: selectimm_i1
    ; CHECK: successors: %bb.2(0x40000000), %bb.1(0x40000000)
    ; CHECK-NEXT: liveins: $a, $c
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $v = LDImm1 -1
    ; CHECK-NEXT: BR %bb.1, $c, 1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $v = LDImm1 0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: successors: %bb.4(0x40000000), %bb.3(0x40000000)
    ; CHECK-NEXT: liveins: $a, $v
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $xlsb = LDImm1 -1
    ; CHECK-NEXT: BR %bb.3, $v, 1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $a
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $xlsb = LDImm1 0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: liveins: $a, $xlsb
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $a, implicit $xlsb
    $v    = SelectImm $c, -1, 0
    $xlsb = SelectImm $v, -1, 0
    RTS implicit $a, implicit $xlsb
...
---
name: selectimm_gpr
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $c
    ; CHECK-LABEL: name: selectimm_gpr
    ; CHECK: successors: %bb.2(0x40000000), %bb.1(0x40000000)
    ; CHECK-NEXT: liveins: $a, $c
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = LDImm 1
    ; CHECK-NEXT: BR %bb.1, $c, 1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = LDImm 2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $a, $x
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $a, implicit $x
    $x = SelectImm $c, 1, 2
    RTS implicit $a, implicit $x
...
---
name: selectimm_nz
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $n
    ; CHECK-LABEL: name: selectimm_nz
    ; CHECK: successors: %bb.2(0x40000000), %bb.3(0x40000000)
    ; CHECK-NEXT: liveins: $a, $n
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: BR %bb.3, $n, 1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = LDImm 2
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = LDImm 1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $a, $x
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $a, implicit $x
    $x = SelectImm $n, 1, 2
    RTS implicit $a, implicit $x
...
---
name: inc_mb
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $x, $y, $rc2
    ; CHECK-LABEL: name: inc_mb
    ; CHECK: successors: %bb.1(0x40000000), %bb.2(0x40000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = INC $a, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.2, $z, -1
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.3(0x40000000), %bb.4(0x40000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = INC $x, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.4, $z, -1
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.5(0x40000000), %bb.6(0x40000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $y = INC $y, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.6, $z, -1
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .6.entry:
    ; CHECK-NEXT: successors: %bb.5(0x80000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $rc2 = INC $rc2, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .5.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $a, implicit $x, implicit $y, implicit $rc2
    $a, $x, $y, $rc2 = IncMB $a, $x, $y, $rc2, implicit-def $c
    RTS implicit $a, implicit $x, implicit $y, implicit $rc2
...
---
name: inc_mb_dead
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $x, $y, $rc2
    ; CHECK-LABEL: name: inc_mb_dead
    ; CHECK: successors: %bb.1(0x40000000), %bb.2(0x40000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = INC $a, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.2, $z, -1
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.3(0x40000000), %bb.4(0x40000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x = INC $x, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.4, $z, -1
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.5(0x40000000), %bb.6(0x40000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $y = INC $y, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.6, $z, -1
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .6.entry:
    ; CHECK-NEXT: successors: %bb.5(0x80000000)
    ; CHECK-NEXT: liveins: $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $rc2 = INC $rc2, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .5.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $rc2
    $a, $x, $y, $rc2 = IncMB $a, $x, $y, $rc2, implicit-def $c
    RTS implicit $rc2
...
---
name: dec_mb
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $x, $y, $rc2, $rc3
    ; CHECK-LABEL: name: dec_mb
    ; CHECK: successors: %bb.1(0x40000000), %bb.2(0x40000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = COPY $x
    ; CHECK-NEXT: $x = DEC $x, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.2, $z, -1
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.3(0x40000000), %bb.4(0x40000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = COPY $y
    ; CHECK-NEXT: $y = DEC $y, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.4, $z, -1
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.5(0x40000000), %bb.6(0x40000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = COPY $rc2
    ; CHECK-NEXT: $rc2 = DEC $rc2, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.6, $z, -1
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .6.entry:
    ; CHECK-NEXT: successors: %bb.5(0x80000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $rc3 = DEC $rc3, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .5.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $x, implicit $y, implicit $rc2, implicit $rc3
    early-clobber $a, $x, $y, $rc2, $rc3 = DecMB $x, $y, $rc2, $rc3, implicit-def $c
    RTS implicit $x, implicit $y, implicit $rc2, implicit $rc3
...
---
name: inc_mb_abs
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $x, $y, $rc2
    ; CHECK-LABEL: name: inc_mb_abs
    ; CHECK: successors: %bb.1(0x40000000), %bb.2(0x40000000)
    ; CHECK-NEXT: liveins: $a, $x, $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = INC $a, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.2, $z, -1
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.3(0x40000000), %bb.4(0x40000000)
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: INCAbs i16 1234, implicit-def $z
    ; CHECK-NEXT: BR %bb.4, $z, -1
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.5(0x40000000), %bb.6(0x40000000)
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $y = INC $y, implicit-def $c, implicit-def $v, implicit-def $z
    ; CHECK-NEXT: BR %bb.6, $z, -1
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .6.entry:
    ; CHECK-NEXT: successors: %bb.5(0x80000000)
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: INCAbs i16 5678
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .5.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $a, $y
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $a, implicit $y
    $a, $y = IncMB $a, i16 1234, $y, i16 5678, implicit-def $c
    RTS implicit $a, implicit $y
...
---
name: dec_mb_abs
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $x, $y, $rc2, $rc3
    ; CHECK-LABEL: name: dec_mb_abs
    ; CHECK: successors: %bb.1(0x40000000), %bb.2(0x40000000)
    ; CHECK-NEXT: liveins: $x, $y, $rc2, $rc3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = COPY $y
    ; CHECK-NEXT: $y = DEC $y, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.2, $z, -1
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .2.entry:
    ; CHECK-NEXT: successors: %bb.3(0x40000000), %bb.4(0x40000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = LDAbs i16 1234
    ; CHECK-NEXT: DECAbs i16 1234
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.4, $z, -1
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .4.entry:
    ; CHECK-NEXT: successors: %bb.5(0x40000000), %bb.6(0x40000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $a = COPY $rc2
    ; CHECK-NEXT: $rc2 = DEC $rc2, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $z
    ; CHECK-NEXT: BR %bb.6, $z, -1
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .6.entry:
    ; CHECK-NEXT: successors: %bb.5(0x80000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: DECAbs i16 5678
    ; CHECK-NEXT: JMP %bb.5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .5.entry:
    ; CHECK-NEXT: successors: %bb.3(0x80000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .3.entry:
    ; CHECK-NEXT: successors: %bb.1(0x80000000)
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: JMP %bb.1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: .1.entry:
    ; CHECK-NEXT: liveins: $y, $rc2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: RTS implicit $y, implicit $rc2
    early-clobber $a, $y, $rc2 = DecMB $y, i16 1234, $rc2, i16 5678, implicit-def $c
    RTS implicit $y, implicit $rc2
...
---
name: brnz_cmpz_s16
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: brnz_cmpz_s16
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   dead $c = CMPTermZ $x, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $c = CMPTermZ $a, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.entry:
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    liveins: $a, $x
    $c = CMPTermZMB $a, $x, implicit-def $nz
    BR %bb.0, $z, 0
  bb.1.entry:
    RTS
...
---
name: brz_cmpz_s16
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: brz_cmpz_s16
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   dead $c = CMPTermZ $x, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.1, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $c = CMPTermZ $a, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.1, $z, 0
  ; CHECK-NEXT:   JMP %bb.0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.entry:
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    liveins: $a, $x
    $c = CMPTermZMB $a, $x, implicit-def $nz
    BR %bb.0, $z, 1
  bb.1.entry:
    RTS
...
---
name: brnz_cmpz_incmb_s16
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: brnz_cmpz_incmb_s16
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $a = INC $a, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   dead $c = CMPTermZ $a, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $x = INC $x, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   $c = CMPTermZ $x, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.entry:
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    liveins: $a, $x
    $a, $x = IncMB $a, $x, implicit-def $c
    $c = CMPTermZMB $a, $x, implicit-def $nz
    BR %bb.0, $z, 0
  bb.1.entry:
    RTS
...
---
name: brnz_cmpz_s16_generated
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: brnz_cmpz_s16_generated
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $a = LDImm 12
  ; CHECK-NEXT:   $x = LDImm 34
  ; CHECK-NEXT:   dead $c = CMPTermZ $x, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $a
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $c = CMPTermZ $a, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.entry:
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    $a = LDImm 12
    $x = LDImm 34
    $c = CMPTermZMB $a, $x, implicit-def $nz
    BR %bb.0, $z, 0
  bb.1.entry:
    RTS
...
---
name: brnz_cmpz_decmb_incmb_s16
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: brnz_cmpz_decmb_incmb_s16
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.3(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x, $rc2, $rc3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $y = COPY $rc2
  ; CHECK-NEXT:   $rc2 = DEC $rc2, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   $c = CMPImm $y, 0, implicit-def $z
  ; CHECK-NEXT:   BR %bb.3, $z, -1
  ; CHECK-NEXT:   JMP %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT:   liveins: $a, $x, $rc2, $rc3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $rc3 = DEC $rc3, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   JMP %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.4(0x40000000)
  ; CHECK-NEXT:   liveins: $rc3, $rc2, $a, $x
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $a = INC $a, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   dead $c = CMPTermZ $a, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4.entry:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $a, $x, $rc2, $rc3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $x = INC $x, implicit-def $c, implicit-def $v
  ; CHECK-NEXT:   $c = CMPTermZ $x, implicit-def $nz
  ; CHECK-NEXT:   BR %bb.0, $z, 0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.entry:
  ; CHECK-NEXT:   RTS
  bb.0.entry:
    liveins: $a, $x, $rc2, $rc3
    $a, $x = IncMB $a, $x, implicit-def $c
    $y, $rc2, $rc3 = DecMB $rc2, $rc3, implicit-def $c
    $c = CMPTermZMB $a, $x, implicit-def $nz
    BR %bb.0, $z, 0
  bb.1.entry:
    RTS
...
