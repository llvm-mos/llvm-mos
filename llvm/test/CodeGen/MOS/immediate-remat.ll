; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs < %s | FileCheck %s

target datalayout = "e-m:e-p:16:8-p1:8:8-i16:8-i32:8-i64:8-f32:8-f64:8-a:8-Fi8-n8"
target triple = "mos"

; Function Attrs: nofree norecurse nosync nounwind writeonly
define dso_local void @clear_screen(i8* nocapture writeonly %scr) local_unnamed_addr #0 {
; CHECK-LABEL: clear_screen:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    ldx #3
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #232
; CHECK-NEXT:    lda #15
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #216
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #3
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #232
; CHECK-NEXT:    lda #11
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #164
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #216
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #204
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #216
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #244
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #216
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #28
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #68
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #108
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #148
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #188
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #228
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #217
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #12
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #52
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #92
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #132
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #172
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #212
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jsr __memset
; CHECK-NEXT:    ldx #252
; CHECK-NEXT:    stx mos8(__rc2)
; CHECK-NEXT:    ldx #218
; CHECK-NEXT:    stx mos8(__rc3)
; CHECK-NEXT:    ldx #0
; CHECK-NEXT:    stx mos8(__rc4)
; CHECK-NEXT:    ldx #32
; CHECK-NEXT:    lda #7
; CHECK-NEXT:    jmp __memset
entry:
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 1 dereferenceable(1000) %scr, i8 15, i16 1000, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 2048 dereferenceable(1000) inttoptr (i16 -10240 to i8*), i8 11, i16 1000, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -10076 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -10036 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9996 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9956 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9916 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9876 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9836 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9796 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9756 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9716 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9676 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9636 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9596 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9556 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9516 to i8*), i8 7, i16 32, i1 false)
  call void @llvm.memset.p0i8.i16(i8* noundef nonnull align 4 dereferenceable(32) inttoptr (i16 -9476 to i8*), i8 7, i16 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i16(i8* nocapture writeonly, i8, i16, i1 immarg) #1

attributes #0 = { nofree norecurse nosync nounwind writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { argmemonly nofree nounwind willreturn writeonly }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"frame-pointer", i32 2}
!2 = !{!"clang version 14.0.0 (git@github.com:llvm-mos/llvm-mos.git 6cb5d597bc2219250ab4515d4adb49173527c960)"}
