; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=mos-indexiv -verify-each -S %s | FileCheck %s
target datalayout = "e-p:16:8:8-p1:8:8-i16:8:8-i32:8:8-i64:8:8-f32:8:8-f64:8:8-a:8:8-Fi8-n8"
target triple = "mos"

@.str = constant [4 x i8] c"STR\00"

define i16 @main() {
; CHECK-LABEL: @main(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[WHILE_BODY:%.*]]
; CHECK:       while.body:
; CHECK-NEXT:    [[MOS_INDEXIV_IV:%.*]] = phi i8 [ [[MOS_INDEXIV_IV_NEXT:%.*]], [[WHILE_BODY]] ], [ 0, [[ENTRY:%.*]] ]
; CHECK-NEXT:    [[CUR:%.*]] = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i16 0, i16 0), [[ENTRY]] ], [ [[UGLYGEP:%.*]], [[WHILE_BODY]] ]
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, i8* [[CUR]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = zext i8 [[MOS_INDEXIV_IV]] to i16
; CHECK-NEXT:    [[UGLYGEP]] = getelementptr i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i16 0, i16 1), i16 [[TMP1]]
; CHECK-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i8 [[TMP0]], 0
; CHECK-NEXT:    [[MOS_INDEXIV_IV_NEXT]] = add nuw nsw i8 [[MOS_INDEXIV_IV]], 1
; CHECK-NEXT:    br i1 [[TOBOOL_NOT]], label [[WHILE_END:%.*]], label [[WHILE_BODY]]
; CHECK:       while.end:
; CHECK-NEXT:    ret i16 0
;
entry:
  br label %while.body

while.body:
  %cur = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i16 0, i16 0), %entry ], [ %incdec.ptr, %while.body ]
  %0 = load i8, i8* %cur
  %incdec.ptr = getelementptr inbounds i8, i8* %cur, i16 1
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %while.end, label %while.body


while.end:
  ret i16 0
}
